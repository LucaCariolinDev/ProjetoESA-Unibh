{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API de Encontro Automotivo - Projeto ESA Unibh",
    "description": "Grupo: Luca Cariolin e Raphael Vieira Alves"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "ROTA PRINCIPAL"
        ],
        "description": "Uma rota que retorna informações do grupo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Mensagem enviada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "mensagem": {
                  "type": "string",
                  "example": "Projeto Final ESA - Grupo: Luca Cariolin e Raphael Vieira Alves"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/processamentoparalelo": {
      "get": {
        "tags": [
          "Execução em Paralelo"
        ],
        "description": "Executa operação matemática em paralelo. Processo Pai envia (i+1) * 1000. Processo filho recebe (i+1) * 1000 e soma + 1.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Uma rota que retorna todos os usuários",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/getAllByName": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Uma rota que retorna todos os usuários com o nome do usuário informado",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Uma rota que cria um usuário.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "userType": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Uma rota que retorna um usuário pelo Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Uma rota que atualiza um usuário. IMPORTANTE!! -> Deve utilar o token obtido no login.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "userType": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Uma rota que excluí um usuário. IMPORTANTE!! -> Deve utilar o token obtido no login.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Uma rota que retorna para realizar o Login e obter o token JWT",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cars": {
      "get": {
        "tags": [
          "Car"
        ],
        "description": "Uma rota que retorna todos os carros",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/cars/getCarsByBrand": {
      "get": {
        "tags": [
          "Car"
        ],
        "description": "Uma rota que retorna todos os carros com o nome da marca informado",
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/car": {
      "post": {
        "tags": [
          "Car"
        ],
        "description": "Uma rota que cria o carro de um usuário. IMPORTANTE!! -> Deve utilar o token obtido no login. E ser usuário(userType == 2) do tipo Proprietário de Veículo",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "example": "any"
                },
                "model": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "horsePower": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/car/{id}": {
      "get": {
        "tags": [
          "Car"
        ],
        "description": "Uma rota que retorna o carro pelo Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Car"
        ],
        "description": "Uma rota que atualiza o carro de um usuário. IMPORTANTE!! -> Deve utilar o token obtido no login. E ser usuário(userType == 2) do tipo Proprietário de Veículo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "example": "any"
                },
                "model": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "horsePower": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Car"
        ],
        "description": "Uma rota que deleta carro de um usuário. IMPORTANTE!! -> Deve utilar o token obtido no login. E ser usuário(userType == 2) do tipo Proprietário de Veículo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/carsevents": {
      "get": {
        "tags": [
          "CarEvent"
        ],
        "description": "Uma rota que retorna todos os eventos automotivos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/carevent/{id}": {
      "get": {
        "tags": [
          "CarEvent"
        ],
        "description": "Uma rota que retorna um evento automotivo pelo Id do evento",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "CarEvent"
        ],
        "description": "Uma rota que atualiza um evento automotivo. IMPORTANTE!! -> Deve utilar o token obtido no login. E ser usuário(userType == 1) do tipo Organizador de Evento",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "location": {
                  "example": "any"
                },
                "duration": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "CarEvent"
        ],
        "description": "Uma rota que excluí um evento automotivo. IMPORTANTE!! -> Deve utilar o token obtido no login. E ser usuário(userType == 1) do tipo Organizador de Evento",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/carsevents/getAllByEventName": {
      "get": {
        "tags": [
          "CarEvent"
        ],
        "description": "Uma rota que retorna todos os carros com o nome do evento informado",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/carevent": {
      "post": {
        "tags": [
          "CarEvent"
        ],
        "description": "Uma rota que adiciona um evento automotivo. IMPORTANTE!! -> Deve utilar o token obtido no login. E ser usuário(userType == 1) do tipo Organizador de Evento",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "location": {
                  "example": "any"
                },
                "duration": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/carevent/addCarIntoCarEvent": {
      "post": {
        "tags": [
          "CarEvent"
        ],
        "description": "Uma rota que adiciona um carro a um evento automotivo. IMPORTANTE!! -> Deve utilar o token obtido no login. E ser usuário(userType == 1) do tipo Organizador de Evento",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "carEventId": {
                  "example": "any"
                },
                "carId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Raphael"
        },
        "email": {
          "type": "string",
          "example": "Raphael@hotmail.com"
        },
        "userType": {
          "type": "number",
          "example": 1
        },
        "password": {
          "type": "string",
          "example": "teste7878"
        }
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string",
          "example": "Fiat"
        },
        "model": {
          "type": "string",
          "example": "Argo"
        },
        "year": {
          "type": "number",
          "example": 2018
        },
        "horsePower": {
          "type": "number",
          "example": 100
        }
      }
    },
    "CarEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Encontro da Frota do Raphael"
        },
        "location": {
          "type": "string",
          "example": "Postinho do Racha(Shell)"
        },
        "duration": {
          "type": "number",
          "example": 3
        }
      }
    }
  }
}